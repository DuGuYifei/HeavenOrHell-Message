syntax = "proto3";

package message;

// New room use room_id = 0 to say hello, otherwise means join room
message HelloMessage { int32 room_id = 1; }

enum CharacterType {
  REAPER = 0;
  SOUL_DOG = 1;
  SOUL_PSYCHOLOGIST = 2;
  SOUL_DETECTIVE = 3;
}

message Character {
  int32 player_id = 1;
  CharacterType character_type = 2;
}

message MessageWrapper {
  oneof payload {
    RoomMessage room_message = 1;
    StringMessage string_message = 2;
    LobbyMessage lobby_message = 3;
    StartReceiveMsgMessage start_receive_msg_message = 4;
    PlayerBasicMessage player_basic_message = 5;
    PropTryGetMessage prop_try_get_message = 6;
    PropGetMessage prop_get_message = 7;
    IntegerMessage integer_message = 8;
    GateMessage gate_message = 9;
    EnterGateMessage enter_gate_message = 10;
    EnterGateResultMessage enter_gate_result_message = 11;
    GameResultMessage game_result_message = 12;
  }
}

// If room_id in HelloMessage is not 0 and the room_id does not exist, bool
// is_join is false
message RoomMessage {
  bool is_join = 1;
  int32 room_id = 2;
  int32 player_id = 3;
  repeated Character characters = 4;
}

enum StringMessageType {
  MAZE_MAP = 0;
}

message StringMessage {
  int32 message_type = 1;
  string message_content = 2;
}

// Client send it to server and server send it to other players
message LobbyMessage {
  bool is_ready = 1;
  int32 player_id = 2;
  CharacterType character_type = 3;
}

// Will check if atomic value bool start_game is true (all players are ready and
// if only one player is reaper),
// otherwise not send anything.
// This message is
// sent by player when they start game in map
message StartReceiveMsgMessage { int32 player_id = 1; }

enum PlayerAnimationType {
  IDLE = 0;
  WALK_LEFT = 1;
  WALK_RIGHT = 2;
  DASH_LEFT = 3;
  DASH_RIGHT = 4;
  ATTACK = 5;
  HIT = 6;
  WEAK = 7;
  DIE = 8;
}

enum CharacterState {
  Character_STATE_NORMAL = 0;
  Character_STATE_WEAK = 1;
  Character_STATE_DIE = 2;
  Character_STATE_FREEZE = 3;
}

message PlayerBasicMessage {
  int32 player_id = 1;
  float position_x = 2;
  float position_y = 3;
  float hp = 4;
  float max_hp = 5;
  float weak_timer = 6;
  PlayerAnimationType animation_type = 7;
  CharacterState character_state = 8;
}

message PropTryGetMessage {
  int32 player_id = 1;
  int32 prop_id = 2;
  int32 prop_type =
      3; // TODO: Need define 'a b c d' in map to give prop type, or random by
         // client (server can mutex lock to only one client get prop)
}

message PropGetMessage {
  bool is_get = 1;
  int32 player_id = 2;
  int32 prop_id = 3;
}

enum IntegerMessageType {
  ALTAR_MINI_GAME_SUCCESS = 0;
  REAPER_ATTACK_RESULT = 1;
}

message IntegerMessage {
  IntegerMessageType message_type = 1;
  int32 value = 2; // if ALTERN_MINI_GAME_SUCCESS, value is the player_id of
                   // recovered soul. if REAPER_ATTACK_RESULT, value is the
                   // player_id of attacked soul.
}

enum GateType {
  GATE_HEAVEN = 0;
  GATE_HELL = 1;
}

enum GateDirection {
  GATE_DIRECTION_UP = 0;
  GATE_DIRECTION_DOWN = 1;
  GATE_DIRECTION_LEFT = 2;
  GATE_DIRECTION_RIGHT = 3;
}

message Gate {
  GateDirection gate_direction = 1;
  GateType gate_type = 2;
}

message GateMessage { repeated Gate gates = 1; }

message EnterGateMessage { GateDirection gate_direction = 2; }

message EnterGateResultMessage {
  int32 player_id = 1;
  Gate gate = 2;
}

enum GameResult {
  GAME_RESULT_TIE = 0;
  GAME_RESULT_REAPER_WIN = 1;
  GAME_RESULT_SOUL_WIN = 2;
}

enum PlayerResult {
  PLAYER_RESULT_DIE_BY_HIT = 0;
  PLAYER_RESULT_HELL = 1;
  PLAYER_RESULT_HEAVEN = 2;
  PLAYER_RESULT_REAPER_HAPPY = 3;
  PLAYER_RESULT_REAPER_SAD = 4;
}

message PlayerResultMessage {
  PlayerResult player_result = 1;
  int32 player_id = 2;
}

message GameResultMessage {
  GameResult game_result = 1;
  repeated PlayerResultMessage player_result_messages = 2;
}

message ChatMessage {
  int32 from_player_id = 1;
  bool is_to_all = 2;
  string message = 3;
}