// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntegerMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LobbyMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayerBasicMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropGetMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropTryGetMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReaperAttackMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReaperAttackResultMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoomMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartReceiveMsgMessage_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringMessage_message_2eproto;
namespace message {
class HelloMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HelloMessage> _instance;
} _HelloMessage_default_instance_;
class CharacterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character> _instance;
} _Character_default_instance_;
class MessageWrapperDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageWrapper> _instance;
  const ::message::RoomMessage* room_message_;
  const ::message::StringMessage* string_message_;
  const ::message::LobbyMessage* lobby_message_;
  const ::message::StartReceiveMsgMessage* start_receive_msg_message_;
  const ::message::PlayerBasicMessage* player_basic_message_;
  const ::message::ReaperAttackMessage* reaper_attack_message_;
  const ::message::ReaperAttackResultMessage* reaper_attack_result_message_;
  const ::message::PropTryGetMessage* prop_try_get_message_;
  const ::message::PropGetMessage* prop_get_message_;
  const ::message::IntegerMessage* integer_message_;
} _MessageWrapper_default_instance_;
class RoomMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RoomMessage> _instance;
} _RoomMessage_default_instance_;
class StringMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StringMessage> _instance;
} _StringMessage_default_instance_;
class LobbyMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LobbyMessage> _instance;
} _LobbyMessage_default_instance_;
class StartReceiveMsgMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartReceiveMsgMessage> _instance;
} _StartReceiveMsgMessage_default_instance_;
class PlayerBasicMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayerBasicMessage> _instance;
} _PlayerBasicMessage_default_instance_;
class ReaperAttackMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReaperAttackMessage> _instance;
} _ReaperAttackMessage_default_instance_;
class PropTryGetMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PropTryGetMessage> _instance;
} _PropTryGetMessage_default_instance_;
class PropGetMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PropGetMessage> _instance;
} _PropGetMessage_default_instance_;
class ReaperAttackResultMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReaperAttackResultMessage> _instance;
} _ReaperAttackResultMessage_default_instance_;
class IntegerMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntegerMessage> _instance;
} _IntegerMessage_default_instance_;
}  // namespace message
static void InitDefaultsscc_info_Character_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_Character_default_instance_;
    new (ptr) ::message::Character();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::Character::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_message_2eproto}, {}};

static void InitDefaultsscc_info_HelloMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_HelloMessage_default_instance_;
    new (ptr) ::message::HelloMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::HelloMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HelloMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HelloMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_IntegerMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_IntegerMessage_default_instance_;
    new (ptr) ::message::IntegerMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::IntegerMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntegerMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IntegerMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_LobbyMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_LobbyMessage_default_instance_;
    new (ptr) ::message::LobbyMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::LobbyMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LobbyMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LobbyMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_MessageWrapper_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_MessageWrapper_default_instance_;
    new (ptr) ::message::MessageWrapper();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::MessageWrapper::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_MessageWrapper_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 10, 0, InitDefaultsscc_info_MessageWrapper_message_2eproto}, {
      &scc_info_RoomMessage_message_2eproto.base,
      &scc_info_StringMessage_message_2eproto.base,
      &scc_info_LobbyMessage_message_2eproto.base,
      &scc_info_StartReceiveMsgMessage_message_2eproto.base,
      &scc_info_PlayerBasicMessage_message_2eproto.base,
      &scc_info_ReaperAttackMessage_message_2eproto.base,
      &scc_info_ReaperAttackResultMessage_message_2eproto.base,
      &scc_info_PropTryGetMessage_message_2eproto.base,
      &scc_info_PropGetMessage_message_2eproto.base,
      &scc_info_IntegerMessage_message_2eproto.base,}};

static void InitDefaultsscc_info_PlayerBasicMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_PlayerBasicMessage_default_instance_;
    new (ptr) ::message::PlayerBasicMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::PlayerBasicMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayerBasicMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayerBasicMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_PropGetMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_PropGetMessage_default_instance_;
    new (ptr) ::message::PropGetMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::PropGetMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropGetMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PropGetMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_PropTryGetMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_PropTryGetMessage_default_instance_;
    new (ptr) ::message::PropTryGetMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::PropTryGetMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PropTryGetMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PropTryGetMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_ReaperAttackMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_ReaperAttackMessage_default_instance_;
    new (ptr) ::message::ReaperAttackMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::ReaperAttackMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReaperAttackMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReaperAttackMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_ReaperAttackResultMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_ReaperAttackResultMessage_default_instance_;
    new (ptr) ::message::ReaperAttackResultMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::ReaperAttackResultMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReaperAttackResultMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReaperAttackResultMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_RoomMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_RoomMessage_default_instance_;
    new (ptr) ::message::RoomMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::RoomMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoomMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RoomMessage_message_2eproto}, {
      &scc_info_Character_message_2eproto.base,}};

static void InitDefaultsscc_info_StartReceiveMsgMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_StartReceiveMsgMessage_default_instance_;
    new (ptr) ::message::StartReceiveMsgMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::StartReceiveMsgMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartReceiveMsgMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartReceiveMsgMessage_message_2eproto}, {}};

static void InitDefaultsscc_info_StringMessage_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_StringMessage_default_instance_;
    new (ptr) ::message::StringMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::StringMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringMessage_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StringMessage_message_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_message_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::HelloMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::HelloMessage, room_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::Character, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::Character, character_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::MessageWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::message::MessageWrapper, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::message::MessageWrapperDefaultTypeInternal, room_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, string_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, lobby_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, start_receive_msg_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, player_basic_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, reaper_attack_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, reaper_attack_result_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, prop_try_get_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, prop_get_message_),
  offsetof(::message::MessageWrapperDefaultTypeInternal, integer_message_),
  PROTOBUF_FIELD_OFFSET(::message::MessageWrapper, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::RoomMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::RoomMessage, is_join_),
  PROTOBUF_FIELD_OFFSET(::message::RoomMessage, room_id_),
  PROTOBUF_FIELD_OFFSET(::message::RoomMessage, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::RoomMessage, characters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::StringMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::StringMessage, message_type_),
  PROTOBUF_FIELD_OFFSET(::message::StringMessage, message_content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::LobbyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::LobbyMessage, is_ready_),
  PROTOBUF_FIELD_OFFSET(::message::LobbyMessage, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::LobbyMessage, character_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::StartReceiveMsgMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::StartReceiveMsgMessage, player_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, position_x_),
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, position_y_),
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, hp_),
  PROTOBUF_FIELD_OFFSET(::message::PlayerBasicMessage, max_hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackMessage, soul_player_id_),
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackMessage, skill_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::PropTryGetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::PropTryGetMessage, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::PropTryGetMessage, prop_id_),
  PROTOBUF_FIELD_OFFSET(::message::PropTryGetMessage, prop_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::PropGetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::PropGetMessage, is_get_),
  PROTOBUF_FIELD_OFFSET(::message::PropGetMessage, player_id_),
  PROTOBUF_FIELD_OFFSET(::message::PropGetMessage, prop_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackResultMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackResultMessage, soul_player_id_),
  PROTOBUF_FIELD_OFFSET(::message::ReaperAttackResultMessage, is_hit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::IntegerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::IntegerMessage, message_type_),
  PROTOBUF_FIELD_OFFSET(::message::IntegerMessage, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::message::HelloMessage)},
  { 6, -1, sizeof(::message::Character)},
  { 13, -1, sizeof(::message::MessageWrapper)},
  { 29, -1, sizeof(::message::RoomMessage)},
  { 38, -1, sizeof(::message::StringMessage)},
  { 45, -1, sizeof(::message::LobbyMessage)},
  { 53, -1, sizeof(::message::StartReceiveMsgMessage)},
  { 59, -1, sizeof(::message::PlayerBasicMessage)},
  { 69, -1, sizeof(::message::ReaperAttackMessage)},
  { 76, -1, sizeof(::message::PropTryGetMessage)},
  { 84, -1, sizeof(::message::PropGetMessage)},
  { 92, -1, sizeof(::message::ReaperAttackResultMessage)},
  { 99, -1, sizeof(::message::IntegerMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_HelloMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_Character_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_MessageWrapper_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_RoomMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_StringMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_LobbyMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_StartReceiveMsgMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_PlayerBasicMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_ReaperAttackMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_PropTryGetMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_PropGetMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_ReaperAttackResultMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_IntegerMessage_default_instance_),
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\022\007message\"\037\n\014HelloMessage"
  "\022\017\n\007room_id\030\001 \001(\005\"N\n\tCharacter\022\021\n\tplayer"
  "_id\030\001 \001(\005\022.\n\016character_type\030\002 \001(\0162\026.mess"
  "age.CharacterType\"\336\004\n\016MessageWrapper\022,\n\014"
  "room_message\030\001 \001(\0132\024.message.RoomMessage"
  "H\000\0220\n\016string_message\030\002 \001(\0132\026.message.Str"
  "ingMessageH\000\022.\n\rlobby_message\030\003 \001(\0132\025.me"
  "ssage.LobbyMessageH\000\022D\n\031start_receive_ms"
  "g_message\030\004 \001(\0132\037.message.StartReceiveMs"
  "gMessageH\000\022;\n\024player_basic_message\030\005 \001(\013"
  "2\033.message.PlayerBasicMessageH\000\022=\n\025reape"
  "r_attack_message\030\006 \001(\0132\034.message.ReaperA"
  "ttackMessageH\000\022J\n\034reaper_attack_result_m"
  "essage\030\007 \001(\0132\".message.ReaperAttackResul"
  "tMessageH\000\022:\n\024prop_try_get_message\030\010 \001(\013"
  "2\032.message.PropTryGetMessageH\000\0223\n\020prop_g"
  "et_message\030\t \001(\0132\027.message.PropGetMessag"
  "eH\000\0222\n\017integer_message\030\n \001(\0132\027.message.I"
  "ntegerMessageH\000B\t\n\007payload\"j\n\013RoomMessag"
  "e\022\017\n\007is_join\030\001 \001(\010\022\017\n\007room_id\030\002 \001(\005\022\021\n\tp"
  "layer_id\030\003 \001(\005\022&\n\ncharacters\030\004 \003(\0132\022.mes"
  "sage.Character\">\n\rStringMessage\022\024\n\014messa"
  "ge_type\030\001 \001(\005\022\027\n\017message_content\030\002 \001(\t\"c"
  "\n\014LobbyMessage\022\020\n\010is_ready\030\001 \001(\010\022\021\n\tplay"
  "er_id\030\002 \001(\005\022.\n\016character_type\030\003 \001(\0162\026.me"
  "ssage.CharacterType\"+\n\026StartReceiveMsgMe"
  "ssage\022\021\n\tplayer_id\030\001 \001(\005\"k\n\022PlayerBasicM"
  "essage\022\021\n\tplayer_id\030\001 \001(\005\022\022\n\nposition_x\030"
  "\002 \001(\002\022\022\n\nposition_y\030\003 \001(\002\022\n\n\002hp\030\004 \001(\002\022\016\n"
  "\006max_hp\030\005 \001(\002\"\?\n\023ReaperAttackMessage\022\026\n\016"
  "soul_player_id\030\001 \001(\005\022\020\n\010skill_id\030\002 \001(\005\"J"
  "\n\021PropTryGetMessage\022\021\n\tplayer_id\030\001 \001(\005\022\017"
  "\n\007prop_id\030\002 \001(\005\022\021\n\tprop_type\030\003 \001(\005\"D\n\016Pr"
  "opGetMessage\022\016\n\006is_get\030\001 \001(\010\022\021\n\tplayer_i"
  "d\030\002 \001(\005\022\017\n\007prop_id\030\003 \001(\005\"C\n\031ReaperAttack"
  "ResultMessage\022\026\n\016soul_player_id\030\001 \001(\005\022\016\n"
  "\006is_hit\030\002 \001(\010\"R\n\016IntegerMessage\0221\n\014messa"
  "ge_type\030\001 \001(\0162\033.message.IntegerMessageTy"
  "pe\022\r\n\005value\030\002 \001(\005*T\n\rCharacterType\022\n\n\006RE"
  "APER\020\000\022\014\n\010SOUL_DOG\020\001\022\025\n\021SOUL_PSYCHOLOGIS"
  "T\020\002\022\022\n\016SOUL_DETECTIVE\020\003*!\n\021StringMessage"
  "Type\022\014\n\010MAZE_MAP\020\000*1\n\022IntegerMessageType"
  "\022\033\n\027ALTAR_MINI_GAME_SUCCESS\020\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_2eproto_sccs[13] = {
  &scc_info_Character_message_2eproto.base,
  &scc_info_HelloMessage_message_2eproto.base,
  &scc_info_IntegerMessage_message_2eproto.base,
  &scc_info_LobbyMessage_message_2eproto.base,
  &scc_info_MessageWrapper_message_2eproto.base,
  &scc_info_PlayerBasicMessage_message_2eproto.base,
  &scc_info_PropGetMessage_message_2eproto.base,
  &scc_info_PropTryGetMessage_message_2eproto.base,
  &scc_info_ReaperAttackMessage_message_2eproto.base,
  &scc_info_ReaperAttackResultMessage_message_2eproto.base,
  &scc_info_RoomMessage_message_2eproto.base,
  &scc_info_StartReceiveMsgMessage_message_2eproto.base,
  &scc_info_StringMessage_message_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto = {
  false, false, descriptor_table_protodef_message_2eproto, "message.proto", 1717,
  &descriptor_table_message_2eproto_once, descriptor_table_message_2eproto_sccs, descriptor_table_message_2eproto_deps, 13, 0,
  schemas, file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, 13, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_2eproto)), true);
namespace message {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
bool CharacterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StringMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[1];
}
bool StringMessageType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IntegerMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[2];
}
bool IntegerMessageType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HelloMessage::InitAsDefaultInstance() {
}
class HelloMessage::_Internal {
 public:
};

HelloMessage::HelloMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.HelloMessage)
}
HelloMessage::HelloMessage(const HelloMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:message.HelloMessage)
}

void HelloMessage::SharedCtor() {
  room_id_ = 0;
}

HelloMessage::~HelloMessage() {
  // @@protoc_insertion_point(destructor:message.HelloMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HelloMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HelloMessage::ArenaDtor(void* object) {
  HelloMessage* _this = reinterpret_cast< HelloMessage* >(object);
  (void)_this;
}
void HelloMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HelloMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloMessage& HelloMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HelloMessage_message_2eproto.base);
  return *internal_default_instance();
}


void HelloMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.HelloMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  room_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 room_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HelloMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.HelloMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.HelloMessage)
  return target;
}

size_t HelloMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.HelloMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_room_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.HelloMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HelloMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.HelloMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.HelloMessage)
    MergeFrom(*source);
  }
}

void HelloMessage::MergeFrom(const HelloMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.HelloMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_id() != 0) {
    _internal_set_room_id(from._internal_room_id());
  }
}

void HelloMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.HelloMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloMessage::CopyFrom(const HelloMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.HelloMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloMessage::IsInitialized() const {
  return true;
}

void HelloMessage::InternalSwap(HelloMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(room_id_, other->room_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Character::InitAsDefaultInstance() {
}
class Character::_Internal {
 public:
};

Character::Character(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Character)
}
Character::Character(const Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&character_type_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(character_type_));
  // @@protoc_insertion_point(copy_constructor:message.Character)
}

void Character::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&character_type_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(character_type_));
}

Character::~Character() {
  // @@protoc_insertion_point(destructor:message.Character)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character::ArenaDtor(void* object) {
  Character* _this = reinterpret_cast< Character* >(object);
  (void)_this;
}
void Character::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character& Character::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_message_2eproto.base);
  return *internal_default_instance();
}


void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&character_type_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(character_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.CharacterType character_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_character_type(static_cast<::message::CharacterType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_id(), target);
  }

  // .message.CharacterType character_type = 2;
  if (this->character_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_character_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Character)
  return target;
}

size_t Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Character)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // .message.CharacterType character_type = 2;
  if (this->character_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_character_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.Character)
  GOOGLE_DCHECK_NE(&from, this);
  const Character* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.Character)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.Character)
    MergeFrom(*source);
  }
}

void Character::MergeFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.Character)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.character_type() != 0) {
    _internal_set_character_type(from._internal_character_type());
  }
}

void Character::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character::IsInitialized() const {
  return true;
}

void Character::InternalSwap(Character* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character, character_type_)
      + sizeof(Character::character_type_)
      - PROTOBUF_FIELD_OFFSET(Character, player_id_)>(
          reinterpret_cast<char*>(&player_id_),
          reinterpret_cast<char*>(&other->player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageWrapper::InitAsDefaultInstance() {
  ::message::_MessageWrapper_default_instance_.room_message_ = const_cast< ::message::RoomMessage*>(
      ::message::RoomMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.string_message_ = const_cast< ::message::StringMessage*>(
      ::message::StringMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.lobby_message_ = const_cast< ::message::LobbyMessage*>(
      ::message::LobbyMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.start_receive_msg_message_ = const_cast< ::message::StartReceiveMsgMessage*>(
      ::message::StartReceiveMsgMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.player_basic_message_ = const_cast< ::message::PlayerBasicMessage*>(
      ::message::PlayerBasicMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.reaper_attack_message_ = const_cast< ::message::ReaperAttackMessage*>(
      ::message::ReaperAttackMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.reaper_attack_result_message_ = const_cast< ::message::ReaperAttackResultMessage*>(
      ::message::ReaperAttackResultMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.prop_try_get_message_ = const_cast< ::message::PropTryGetMessage*>(
      ::message::PropTryGetMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.prop_get_message_ = const_cast< ::message::PropGetMessage*>(
      ::message::PropGetMessage::internal_default_instance());
  ::message::_MessageWrapper_default_instance_.integer_message_ = const_cast< ::message::IntegerMessage*>(
      ::message::IntegerMessage::internal_default_instance());
}
class MessageWrapper::_Internal {
 public:
  static const ::message::RoomMessage& room_message(const MessageWrapper* msg);
  static const ::message::StringMessage& string_message(const MessageWrapper* msg);
  static const ::message::LobbyMessage& lobby_message(const MessageWrapper* msg);
  static const ::message::StartReceiveMsgMessage& start_receive_msg_message(const MessageWrapper* msg);
  static const ::message::PlayerBasicMessage& player_basic_message(const MessageWrapper* msg);
  static const ::message::ReaperAttackMessage& reaper_attack_message(const MessageWrapper* msg);
  static const ::message::ReaperAttackResultMessage& reaper_attack_result_message(const MessageWrapper* msg);
  static const ::message::PropTryGetMessage& prop_try_get_message(const MessageWrapper* msg);
  static const ::message::PropGetMessage& prop_get_message(const MessageWrapper* msg);
  static const ::message::IntegerMessage& integer_message(const MessageWrapper* msg);
};

const ::message::RoomMessage&
MessageWrapper::_Internal::room_message(const MessageWrapper* msg) {
  return *msg->payload_.room_message_;
}
const ::message::StringMessage&
MessageWrapper::_Internal::string_message(const MessageWrapper* msg) {
  return *msg->payload_.string_message_;
}
const ::message::LobbyMessage&
MessageWrapper::_Internal::lobby_message(const MessageWrapper* msg) {
  return *msg->payload_.lobby_message_;
}
const ::message::StartReceiveMsgMessage&
MessageWrapper::_Internal::start_receive_msg_message(const MessageWrapper* msg) {
  return *msg->payload_.start_receive_msg_message_;
}
const ::message::PlayerBasicMessage&
MessageWrapper::_Internal::player_basic_message(const MessageWrapper* msg) {
  return *msg->payload_.player_basic_message_;
}
const ::message::ReaperAttackMessage&
MessageWrapper::_Internal::reaper_attack_message(const MessageWrapper* msg) {
  return *msg->payload_.reaper_attack_message_;
}
const ::message::ReaperAttackResultMessage&
MessageWrapper::_Internal::reaper_attack_result_message(const MessageWrapper* msg) {
  return *msg->payload_.reaper_attack_result_message_;
}
const ::message::PropTryGetMessage&
MessageWrapper::_Internal::prop_try_get_message(const MessageWrapper* msg) {
  return *msg->payload_.prop_try_get_message_;
}
const ::message::PropGetMessage&
MessageWrapper::_Internal::prop_get_message(const MessageWrapper* msg) {
  return *msg->payload_.prop_get_message_;
}
const ::message::IntegerMessage&
MessageWrapper::_Internal::integer_message(const MessageWrapper* msg) {
  return *msg->payload_.integer_message_;
}
void MessageWrapper::set_allocated_room_message(::message::RoomMessage* room_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (room_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(room_message);
    if (message_arena != submessage_arena) {
      room_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, room_message, submessage_arena);
    }
    set_has_room_message();
    payload_.room_message_ = room_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.room_message)
}
void MessageWrapper::set_allocated_string_message(::message::StringMessage* string_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (string_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(string_message);
    if (message_arena != submessage_arena) {
      string_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string_message, submessage_arena);
    }
    set_has_string_message();
    payload_.string_message_ = string_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.string_message)
}
void MessageWrapper::set_allocated_lobby_message(::message::LobbyMessage* lobby_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (lobby_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(lobby_message);
    if (message_arena != submessage_arena) {
      lobby_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lobby_message, submessage_arena);
    }
    set_has_lobby_message();
    payload_.lobby_message_ = lobby_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.lobby_message)
}
void MessageWrapper::set_allocated_start_receive_msg_message(::message::StartReceiveMsgMessage* start_receive_msg_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (start_receive_msg_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(start_receive_msg_message);
    if (message_arena != submessage_arena) {
      start_receive_msg_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_receive_msg_message, submessage_arena);
    }
    set_has_start_receive_msg_message();
    payload_.start_receive_msg_message_ = start_receive_msg_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.start_receive_msg_message)
}
void MessageWrapper::set_allocated_player_basic_message(::message::PlayerBasicMessage* player_basic_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (player_basic_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player_basic_message);
    if (message_arena != submessage_arena) {
      player_basic_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player_basic_message, submessage_arena);
    }
    set_has_player_basic_message();
    payload_.player_basic_message_ = player_basic_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.player_basic_message)
}
void MessageWrapper::set_allocated_reaper_attack_message(::message::ReaperAttackMessage* reaper_attack_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (reaper_attack_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reaper_attack_message);
    if (message_arena != submessage_arena) {
      reaper_attack_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reaper_attack_message, submessage_arena);
    }
    set_has_reaper_attack_message();
    payload_.reaper_attack_message_ = reaper_attack_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.reaper_attack_message)
}
void MessageWrapper::set_allocated_reaper_attack_result_message(::message::ReaperAttackResultMessage* reaper_attack_result_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (reaper_attack_result_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reaper_attack_result_message);
    if (message_arena != submessage_arena) {
      reaper_attack_result_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reaper_attack_result_message, submessage_arena);
    }
    set_has_reaper_attack_result_message();
    payload_.reaper_attack_result_message_ = reaper_attack_result_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.reaper_attack_result_message)
}
void MessageWrapper::set_allocated_prop_try_get_message(::message::PropTryGetMessage* prop_try_get_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (prop_try_get_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(prop_try_get_message);
    if (message_arena != submessage_arena) {
      prop_try_get_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prop_try_get_message, submessage_arena);
    }
    set_has_prop_try_get_message();
    payload_.prop_try_get_message_ = prop_try_get_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.prop_try_get_message)
}
void MessageWrapper::set_allocated_prop_get_message(::message::PropGetMessage* prop_get_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (prop_get_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(prop_get_message);
    if (message_arena != submessage_arena) {
      prop_get_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prop_get_message, submessage_arena);
    }
    set_has_prop_get_message();
    payload_.prop_get_message_ = prop_get_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.prop_get_message)
}
void MessageWrapper::set_allocated_integer_message(::message::IntegerMessage* integer_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (integer_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(integer_message);
    if (message_arena != submessage_arena) {
      integer_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer_message, submessage_arena);
    }
    set_has_integer_message();
    payload_.integer_message_ = integer_message;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageWrapper.integer_message)
}
MessageWrapper::MessageWrapper(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MessageWrapper)
}
MessageWrapper::MessageWrapper(const MessageWrapper& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kRoomMessage: {
      _internal_mutable_room_message()->::message::RoomMessage::MergeFrom(from._internal_room_message());
      break;
    }
    case kStringMessage: {
      _internal_mutable_string_message()->::message::StringMessage::MergeFrom(from._internal_string_message());
      break;
    }
    case kLobbyMessage: {
      _internal_mutable_lobby_message()->::message::LobbyMessage::MergeFrom(from._internal_lobby_message());
      break;
    }
    case kStartReceiveMsgMessage: {
      _internal_mutable_start_receive_msg_message()->::message::StartReceiveMsgMessage::MergeFrom(from._internal_start_receive_msg_message());
      break;
    }
    case kPlayerBasicMessage: {
      _internal_mutable_player_basic_message()->::message::PlayerBasicMessage::MergeFrom(from._internal_player_basic_message());
      break;
    }
    case kReaperAttackMessage: {
      _internal_mutable_reaper_attack_message()->::message::ReaperAttackMessage::MergeFrom(from._internal_reaper_attack_message());
      break;
    }
    case kReaperAttackResultMessage: {
      _internal_mutable_reaper_attack_result_message()->::message::ReaperAttackResultMessage::MergeFrom(from._internal_reaper_attack_result_message());
      break;
    }
    case kPropTryGetMessage: {
      _internal_mutable_prop_try_get_message()->::message::PropTryGetMessage::MergeFrom(from._internal_prop_try_get_message());
      break;
    }
    case kPropGetMessage: {
      _internal_mutable_prop_get_message()->::message::PropGetMessage::MergeFrom(from._internal_prop_get_message());
      break;
    }
    case kIntegerMessage: {
      _internal_mutable_integer_message()->::message::IntegerMessage::MergeFrom(from._internal_integer_message());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:message.MessageWrapper)
}

void MessageWrapper::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageWrapper_message_2eproto.base);
  clear_has_payload();
}

MessageWrapper::~MessageWrapper() {
  // @@protoc_insertion_point(destructor:message.MessageWrapper)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageWrapper::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void MessageWrapper::ArenaDtor(void* object) {
  MessageWrapper* _this = reinterpret_cast< MessageWrapper* >(object);
  (void)_this;
}
void MessageWrapper::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageWrapper& MessageWrapper::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageWrapper_message_2eproto.base);
  return *internal_default_instance();
}


void MessageWrapper::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:message.MessageWrapper)
  switch (payload_case()) {
    case kRoomMessage: {
      if (GetArena() == nullptr) {
        delete payload_.room_message_;
      }
      break;
    }
    case kStringMessage: {
      if (GetArena() == nullptr) {
        delete payload_.string_message_;
      }
      break;
    }
    case kLobbyMessage: {
      if (GetArena() == nullptr) {
        delete payload_.lobby_message_;
      }
      break;
    }
    case kStartReceiveMsgMessage: {
      if (GetArena() == nullptr) {
        delete payload_.start_receive_msg_message_;
      }
      break;
    }
    case kPlayerBasicMessage: {
      if (GetArena() == nullptr) {
        delete payload_.player_basic_message_;
      }
      break;
    }
    case kReaperAttackMessage: {
      if (GetArena() == nullptr) {
        delete payload_.reaper_attack_message_;
      }
      break;
    }
    case kReaperAttackResultMessage: {
      if (GetArena() == nullptr) {
        delete payload_.reaper_attack_result_message_;
      }
      break;
    }
    case kPropTryGetMessage: {
      if (GetArena() == nullptr) {
        delete payload_.prop_try_get_message_;
      }
      break;
    }
    case kPropGetMessage: {
      if (GetArena() == nullptr) {
        delete payload_.prop_get_message_;
      }
      break;
    }
    case kIntegerMessage: {
      if (GetArena() == nullptr) {
        delete payload_.integer_message_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void MessageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MessageWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageWrapper::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.RoomMessage room_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_room_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.StringMessage string_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_string_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.LobbyMessage lobby_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lobby_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.StartReceiveMsgMessage start_receive_msg_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_receive_msg_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.PlayerBasicMessage player_basic_message = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_player_basic_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.ReaperAttackMessage reaper_attack_message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_reaper_attack_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.ReaperAttackResultMessage reaper_attack_result_message = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_reaper_attack_result_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.PropTryGetMessage prop_try_get_message = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_prop_try_get_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.PropGetMessage prop_get_message = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_prop_get_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.IntegerMessage integer_message = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_integer_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageWrapper::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MessageWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.RoomMessage room_message = 1;
  if (_internal_has_room_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::room_message(this), target, stream);
  }

  // .message.StringMessage string_message = 2;
  if (_internal_has_string_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::string_message(this), target, stream);
  }

  // .message.LobbyMessage lobby_message = 3;
  if (_internal_has_lobby_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lobby_message(this), target, stream);
  }

  // .message.StartReceiveMsgMessage start_receive_msg_message = 4;
  if (_internal_has_start_receive_msg_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::start_receive_msg_message(this), target, stream);
  }

  // .message.PlayerBasicMessage player_basic_message = 5;
  if (_internal_has_player_basic_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::player_basic_message(this), target, stream);
  }

  // .message.ReaperAttackMessage reaper_attack_message = 6;
  if (_internal_has_reaper_attack_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::reaper_attack_message(this), target, stream);
  }

  // .message.ReaperAttackResultMessage reaper_attack_result_message = 7;
  if (_internal_has_reaper_attack_result_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::reaper_attack_result_message(this), target, stream);
  }

  // .message.PropTryGetMessage prop_try_get_message = 8;
  if (_internal_has_prop_try_get_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::prop_try_get_message(this), target, stream);
  }

  // .message.PropGetMessage prop_get_message = 9;
  if (_internal_has_prop_get_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::prop_get_message(this), target, stream);
  }

  // .message.IntegerMessage integer_message = 10;
  if (_internal_has_integer_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::integer_message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MessageWrapper)
  return target;
}

size_t MessageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.MessageWrapper)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .message.RoomMessage room_message = 1;
    case kRoomMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.room_message_);
      break;
    }
    // .message.StringMessage string_message = 2;
    case kStringMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.string_message_);
      break;
    }
    // .message.LobbyMessage lobby_message = 3;
    case kLobbyMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.lobby_message_);
      break;
    }
    // .message.StartReceiveMsgMessage start_receive_msg_message = 4;
    case kStartReceiveMsgMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.start_receive_msg_message_);
      break;
    }
    // .message.PlayerBasicMessage player_basic_message = 5;
    case kPlayerBasicMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.player_basic_message_);
      break;
    }
    // .message.ReaperAttackMessage reaper_attack_message = 6;
    case kReaperAttackMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.reaper_attack_message_);
      break;
    }
    // .message.ReaperAttackResultMessage reaper_attack_result_message = 7;
    case kReaperAttackResultMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.reaper_attack_result_message_);
      break;
    }
    // .message.PropTryGetMessage prop_try_get_message = 8;
    case kPropTryGetMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.prop_try_get_message_);
      break;
    }
    // .message.PropGetMessage prop_get_message = 9;
    case kPropGetMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.prop_get_message_);
      break;
    }
    // .message.IntegerMessage integer_message = 10;
    case kIntegerMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.integer_message_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageWrapper::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.MessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageWrapper* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.MessageWrapper)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.MessageWrapper)
    MergeFrom(*source);
  }
}

void MessageWrapper::MergeFrom(const MessageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.MessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kRoomMessage: {
      _internal_mutable_room_message()->::message::RoomMessage::MergeFrom(from._internal_room_message());
      break;
    }
    case kStringMessage: {
      _internal_mutable_string_message()->::message::StringMessage::MergeFrom(from._internal_string_message());
      break;
    }
    case kLobbyMessage: {
      _internal_mutable_lobby_message()->::message::LobbyMessage::MergeFrom(from._internal_lobby_message());
      break;
    }
    case kStartReceiveMsgMessage: {
      _internal_mutable_start_receive_msg_message()->::message::StartReceiveMsgMessage::MergeFrom(from._internal_start_receive_msg_message());
      break;
    }
    case kPlayerBasicMessage: {
      _internal_mutable_player_basic_message()->::message::PlayerBasicMessage::MergeFrom(from._internal_player_basic_message());
      break;
    }
    case kReaperAttackMessage: {
      _internal_mutable_reaper_attack_message()->::message::ReaperAttackMessage::MergeFrom(from._internal_reaper_attack_message());
      break;
    }
    case kReaperAttackResultMessage: {
      _internal_mutable_reaper_attack_result_message()->::message::ReaperAttackResultMessage::MergeFrom(from._internal_reaper_attack_result_message());
      break;
    }
    case kPropTryGetMessage: {
      _internal_mutable_prop_try_get_message()->::message::PropTryGetMessage::MergeFrom(from._internal_prop_try_get_message());
      break;
    }
    case kPropGetMessage: {
      _internal_mutable_prop_get_message()->::message::PropGetMessage::MergeFrom(from._internal_prop_get_message());
      break;
    }
    case kIntegerMessage: {
      _internal_mutable_integer_message()->::message::IntegerMessage::MergeFrom(from._internal_integer_message());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void MessageWrapper::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.MessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageWrapper::CopyFrom(const MessageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageWrapper::IsInitialized() const {
  return true;
}

void MessageWrapper::InternalSwap(MessageWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageWrapper::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RoomMessage::InitAsDefaultInstance() {
}
class RoomMessage::_Internal {
 public:
};

RoomMessage::RoomMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  characters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.RoomMessage)
}
RoomMessage::RoomMessage(const RoomMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      characters_(from.characters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&is_join_, &from.is_join_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&is_join_)) + sizeof(player_id_));
  // @@protoc_insertion_point(copy_constructor:message.RoomMessage)
}

void RoomMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RoomMessage_message_2eproto.base);
  ::memset(&is_join_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&is_join_)) + sizeof(player_id_));
}

RoomMessage::~RoomMessage() {
  // @@protoc_insertion_point(destructor:message.RoomMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoomMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RoomMessage::ArenaDtor(void* object) {
  RoomMessage* _this = reinterpret_cast< RoomMessage* >(object);
  (void)_this;
}
void RoomMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoomMessage& RoomMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RoomMessage_message_2eproto.base);
  return *internal_default_instance();
}


void RoomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.RoomMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characters_.Clear();
  ::memset(&is_join_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&is_join_)) + sizeof(player_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_join = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_join_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 player_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .message.Character characters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.RoomMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_join = 1;
  if (this->is_join() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_join(), target);
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  // int32 player_id = 3;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_player_id(), target);
  }

  // repeated .message.Character characters = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_characters(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.RoomMessage)
  return target;
}

size_t RoomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.RoomMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .message.Character characters = 4;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool is_join = 1;
  if (this->is_join() != 0) {
    total_size += 1 + 1;
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_room_id());
  }

  // int32 player_id = 3;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.RoomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoomMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.RoomMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.RoomMessage)
    MergeFrom(*source);
  }
}

void RoomMessage::MergeFrom(const RoomMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.RoomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characters_.MergeFrom(from.characters_);
  if (from.is_join() != 0) {
    _internal_set_is_join(from._internal_is_join());
  }
  if (from.room_id() != 0) {
    _internal_set_room_id(from._internal_room_id());
  }
  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
}

void RoomMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.RoomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomMessage::CopyFrom(const RoomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.RoomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomMessage::IsInitialized() const {
  return true;
}

void RoomMessage::InternalSwap(RoomMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  characters_.InternalSwap(&other->characters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomMessage, player_id_)
      + sizeof(RoomMessage::player_id_)
      - PROTOBUF_FIELD_OFFSET(RoomMessage, is_join_)>(
          reinterpret_cast<char*>(&is_join_),
          reinterpret_cast<char*>(&other->is_join_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StringMessage::InitAsDefaultInstance() {
}
class StringMessage::_Internal {
 public:
};

StringMessage::StringMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.StringMessage)
}
StringMessage::StringMessage(const StringMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_content().empty()) {
    message_content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message_content(),
      GetArena());
  }
  message_type_ = from.message_type_;
  // @@protoc_insertion_point(copy_constructor:message.StringMessage)
}

void StringMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StringMessage_message_2eproto.base);
  message_content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_type_ = 0;
}

StringMessage::~StringMessage() {
  // @@protoc_insertion_point(destructor:message.StringMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StringMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StringMessage::ArenaDtor(void* object) {
  StringMessage* _this = reinterpret_cast< StringMessage* >(object);
  (void)_this;
}
void StringMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StringMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringMessage& StringMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StringMessage_message_2eproto.base);
  return *internal_default_instance();
}


void StringMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.StringMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 message_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          message_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "message.StringMessage.message_content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.StringMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_type = 1;
  if (this->message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_type(), target);
  }

  // string message_content = 2;
  if (this->message_content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_content().data(), static_cast<int>(this->_internal_message_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "message.StringMessage.message_content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.StringMessage)
  return target;
}

size_t StringMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.StringMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_content = 2;
  if (this->message_content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_content());
  }

  // int32 message_type = 1;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_message_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.StringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.StringMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.StringMessage)
    MergeFrom(*source);
  }
}

void StringMessage::MergeFrom(const StringMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.StringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_content().size() > 0) {
    _internal_set_message_content(from._internal_message_content());
  }
  if (from.message_type() != 0) {
    _internal_set_message_type(from._internal_message_type());
  }
}

void StringMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.StringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMessage::CopyFrom(const StringMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.StringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMessage::IsInitialized() const {
  return true;
}

void StringMessage::InternalSwap(StringMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_content_.Swap(&other->message_content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(message_type_, other->message_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LobbyMessage::InitAsDefaultInstance() {
}
class LobbyMessage::_Internal {
 public:
};

LobbyMessage::LobbyMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.LobbyMessage)
}
LobbyMessage::LobbyMessage(const LobbyMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&is_ready_, &from.is_ready_,
    static_cast<size_t>(reinterpret_cast<char*>(&character_type_) -
    reinterpret_cast<char*>(&is_ready_)) + sizeof(character_type_));
  // @@protoc_insertion_point(copy_constructor:message.LobbyMessage)
}

void LobbyMessage::SharedCtor() {
  ::memset(&is_ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&character_type_) -
      reinterpret_cast<char*>(&is_ready_)) + sizeof(character_type_));
}

LobbyMessage::~LobbyMessage() {
  // @@protoc_insertion_point(destructor:message.LobbyMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LobbyMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LobbyMessage::ArenaDtor(void* object) {
  LobbyMessage* _this = reinterpret_cast< LobbyMessage* >(object);
  (void)_this;
}
void LobbyMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LobbyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LobbyMessage& LobbyMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LobbyMessage_message_2eproto.base);
  return *internal_default_instance();
}


void LobbyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.LobbyMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&character_type_) -
      reinterpret_cast<char*>(&is_ready_)) + sizeof(character_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LobbyMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.CharacterType character_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_character_type(static_cast<::message::CharacterType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LobbyMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LobbyMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_ready = 1;
  if (this->is_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_ready(), target);
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_player_id(), target);
  }

  // .message.CharacterType character_type = 3;
  if (this->character_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_character_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LobbyMessage)
  return target;
}

size_t LobbyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.LobbyMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_ready = 1;
  if (this->is_ready() != 0) {
    total_size += 1 + 1;
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // .message.CharacterType character_type = 3;
  if (this->character_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_character_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LobbyMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.LobbyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LobbyMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LobbyMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.LobbyMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.LobbyMessage)
    MergeFrom(*source);
  }
}

void LobbyMessage::MergeFrom(const LobbyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.LobbyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_ready() != 0) {
    _internal_set_is_ready(from._internal_is_ready());
  }
  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.character_type() != 0) {
    _internal_set_character_type(from._internal_character_type());
  }
}

void LobbyMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.LobbyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LobbyMessage::CopyFrom(const LobbyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.LobbyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LobbyMessage::IsInitialized() const {
  return true;
}

void LobbyMessage::InternalSwap(LobbyMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LobbyMessage, character_type_)
      + sizeof(LobbyMessage::character_type_)
      - PROTOBUF_FIELD_OFFSET(LobbyMessage, is_ready_)>(
          reinterpret_cast<char*>(&is_ready_),
          reinterpret_cast<char*>(&other->is_ready_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LobbyMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartReceiveMsgMessage::InitAsDefaultInstance() {
}
class StartReceiveMsgMessage::_Internal {
 public:
};

StartReceiveMsgMessage::StartReceiveMsgMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.StartReceiveMsgMessage)
}
StartReceiveMsgMessage::StartReceiveMsgMessage(const StartReceiveMsgMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:message.StartReceiveMsgMessage)
}

void StartReceiveMsgMessage::SharedCtor() {
  player_id_ = 0;
}

StartReceiveMsgMessage::~StartReceiveMsgMessage() {
  // @@protoc_insertion_point(destructor:message.StartReceiveMsgMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartReceiveMsgMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StartReceiveMsgMessage::ArenaDtor(void* object) {
  StartReceiveMsgMessage* _this = reinterpret_cast< StartReceiveMsgMessage* >(object);
  (void)_this;
}
void StartReceiveMsgMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartReceiveMsgMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartReceiveMsgMessage& StartReceiveMsgMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartReceiveMsgMessage_message_2eproto.base);
  return *internal_default_instance();
}


void StartReceiveMsgMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.StartReceiveMsgMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartReceiveMsgMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartReceiveMsgMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.StartReceiveMsgMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.StartReceiveMsgMessage)
  return target;
}

size_t StartReceiveMsgMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.StartReceiveMsgMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartReceiveMsgMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.StartReceiveMsgMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StartReceiveMsgMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartReceiveMsgMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.StartReceiveMsgMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.StartReceiveMsgMessage)
    MergeFrom(*source);
  }
}

void StartReceiveMsgMessage::MergeFrom(const StartReceiveMsgMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.StartReceiveMsgMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
}

void StartReceiveMsgMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.StartReceiveMsgMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartReceiveMsgMessage::CopyFrom(const StartReceiveMsgMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.StartReceiveMsgMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartReceiveMsgMessage::IsInitialized() const {
  return true;
}

void StartReceiveMsgMessage::InternalSwap(StartReceiveMsgMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(player_id_, other->player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartReceiveMsgMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayerBasicMessage::InitAsDefaultInstance() {
}
class PlayerBasicMessage::_Internal {
 public:
};

PlayerBasicMessage::PlayerBasicMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.PlayerBasicMessage)
}
PlayerBasicMessage::PlayerBasicMessage(const PlayerBasicMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_hp_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(max_hp_));
  // @@protoc_insertion_point(copy_constructor:message.PlayerBasicMessage)
}

void PlayerBasicMessage::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_hp_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(max_hp_));
}

PlayerBasicMessage::~PlayerBasicMessage() {
  // @@protoc_insertion_point(destructor:message.PlayerBasicMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayerBasicMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PlayerBasicMessage::ArenaDtor(void* object) {
  PlayerBasicMessage* _this = reinterpret_cast< PlayerBasicMessage* >(object);
  (void)_this;
}
void PlayerBasicMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayerBasicMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayerBasicMessage& PlayerBasicMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayerBasicMessage_message_2eproto.base);
  return *internal_default_instance();
}


void PlayerBasicMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PlayerBasicMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_hp_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(max_hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayerBasicMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float position_x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          position_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float position_y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          position_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float hp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float max_hp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          max_hp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayerBasicMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PlayerBasicMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_id(), target);
  }

  // float position_x = 2;
  if (!(this->position_x() <= 0 && this->position_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_position_x(), target);
  }

  // float position_y = 3;
  if (!(this->position_y() <= 0 && this->position_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_position_y(), target);
  }

  // float hp = 4;
  if (!(this->hp() <= 0 && this->hp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_hp(), target);
  }

  // float max_hp = 5;
  if (!(this->max_hp() <= 0 && this->max_hp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_max_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PlayerBasicMessage)
  return target;
}

size_t PlayerBasicMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PlayerBasicMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // float position_x = 2;
  if (!(this->position_x() <= 0 && this->position_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float position_y = 3;
  if (!(this->position_y() <= 0 && this->position_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float hp = 4;
  if (!(this->hp() <= 0 && this->hp() >= 0)) {
    total_size += 1 + 4;
  }

  // float max_hp = 5;
  if (!(this->max_hp() <= 0 && this->max_hp() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerBasicMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.PlayerBasicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerBasicMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayerBasicMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.PlayerBasicMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.PlayerBasicMessage)
    MergeFrom(*source);
  }
}

void PlayerBasicMessage::MergeFrom(const PlayerBasicMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.PlayerBasicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (!(from.position_x() <= 0 && from.position_x() >= 0)) {
    _internal_set_position_x(from._internal_position_x());
  }
  if (!(from.position_y() <= 0 && from.position_y() >= 0)) {
    _internal_set_position_y(from._internal_position_y());
  }
  if (!(from.hp() <= 0 && from.hp() >= 0)) {
    _internal_set_hp(from._internal_hp());
  }
  if (!(from.max_hp() <= 0 && from.max_hp() >= 0)) {
    _internal_set_max_hp(from._internal_max_hp());
  }
}

void PlayerBasicMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.PlayerBasicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBasicMessage::CopyFrom(const PlayerBasicMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PlayerBasicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBasicMessage::IsInitialized() const {
  return true;
}

void PlayerBasicMessage::InternalSwap(PlayerBasicMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerBasicMessage, max_hp_)
      + sizeof(PlayerBasicMessage::max_hp_)
      - PROTOBUF_FIELD_OFFSET(PlayerBasicMessage, player_id_)>(
          reinterpret_cast<char*>(&player_id_),
          reinterpret_cast<char*>(&other->player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayerBasicMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReaperAttackMessage::InitAsDefaultInstance() {
}
class ReaperAttackMessage::_Internal {
 public:
};

ReaperAttackMessage::ReaperAttackMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.ReaperAttackMessage)
}
ReaperAttackMessage::ReaperAttackMessage(const ReaperAttackMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&soul_player_id_, &from.soul_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_id_) -
    reinterpret_cast<char*>(&soul_player_id_)) + sizeof(skill_id_));
  // @@protoc_insertion_point(copy_constructor:message.ReaperAttackMessage)
}

void ReaperAttackMessage::SharedCtor() {
  ::memset(&soul_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&soul_player_id_)) + sizeof(skill_id_));
}

ReaperAttackMessage::~ReaperAttackMessage() {
  // @@protoc_insertion_point(destructor:message.ReaperAttackMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReaperAttackMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReaperAttackMessage::ArenaDtor(void* object) {
  ReaperAttackMessage* _this = reinterpret_cast< ReaperAttackMessage* >(object);
  (void)_this;
}
void ReaperAttackMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReaperAttackMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReaperAttackMessage& ReaperAttackMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReaperAttackMessage_message_2eproto.base);
  return *internal_default_instance();
}


void ReaperAttackMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.ReaperAttackMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&soul_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&soul_player_id_)) + sizeof(skill_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReaperAttackMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 soul_player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          soul_player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 skill_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skill_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReaperAttackMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReaperAttackMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 soul_player_id = 1;
  if (this->soul_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_soul_player_id(), target);
  }

  // int32 skill_id = 2;
  if (this->skill_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skill_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReaperAttackMessage)
  return target;
}

size_t ReaperAttackMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.ReaperAttackMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 soul_player_id = 1;
  if (this->soul_player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_soul_player_id());
  }

  // int32 skill_id = 2;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skill_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReaperAttackMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.ReaperAttackMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReaperAttackMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReaperAttackMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.ReaperAttackMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.ReaperAttackMessage)
    MergeFrom(*source);
  }
}

void ReaperAttackMessage::MergeFrom(const ReaperAttackMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.ReaperAttackMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.soul_player_id() != 0) {
    _internal_set_soul_player_id(from._internal_soul_player_id());
  }
  if (from.skill_id() != 0) {
    _internal_set_skill_id(from._internal_skill_id());
  }
}

void ReaperAttackMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.ReaperAttackMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReaperAttackMessage::CopyFrom(const ReaperAttackMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.ReaperAttackMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReaperAttackMessage::IsInitialized() const {
  return true;
}

void ReaperAttackMessage::InternalSwap(ReaperAttackMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReaperAttackMessage, skill_id_)
      + sizeof(ReaperAttackMessage::skill_id_)
      - PROTOBUF_FIELD_OFFSET(ReaperAttackMessage, soul_player_id_)>(
          reinterpret_cast<char*>(&soul_player_id_),
          reinterpret_cast<char*>(&other->soul_player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReaperAttackMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PropTryGetMessage::InitAsDefaultInstance() {
}
class PropTryGetMessage::_Internal {
 public:
};

PropTryGetMessage::PropTryGetMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.PropTryGetMessage)
}
PropTryGetMessage::PropTryGetMessage(const PropTryGetMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&prop_type_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(prop_type_));
  // @@protoc_insertion_point(copy_constructor:message.PropTryGetMessage)
}

void PropTryGetMessage::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_type_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(prop_type_));
}

PropTryGetMessage::~PropTryGetMessage() {
  // @@protoc_insertion_point(destructor:message.PropTryGetMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PropTryGetMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PropTryGetMessage::ArenaDtor(void* object) {
  PropTryGetMessage* _this = reinterpret_cast< PropTryGetMessage* >(object);
  (void)_this;
}
void PropTryGetMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PropTryGetMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PropTryGetMessage& PropTryGetMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PropTryGetMessage_message_2eproto.base);
  return *internal_default_instance();
}


void PropTryGetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PropTryGetMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_type_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(prop_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropTryGetMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 prop_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prop_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 prop_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          prop_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PropTryGetMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PropTryGetMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_id(), target);
  }

  // int32 prop_id = 2;
  if (this->prop_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_prop_id(), target);
  }

  // int32 prop_type = 3;
  if (this->prop_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_prop_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PropTryGetMessage)
  return target;
}

size_t PropTryGetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PropTryGetMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // int32 prop_id = 2;
  if (this->prop_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prop_id());
  }

  // int32 prop_type = 3;
  if (this->prop_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prop_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropTryGetMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.PropTryGetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PropTryGetMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PropTryGetMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.PropTryGetMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.PropTryGetMessage)
    MergeFrom(*source);
  }
}

void PropTryGetMessage::MergeFrom(const PropTryGetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.PropTryGetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.prop_id() != 0) {
    _internal_set_prop_id(from._internal_prop_id());
  }
  if (from.prop_type() != 0) {
    _internal_set_prop_type(from._internal_prop_type());
  }
}

void PropTryGetMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.PropTryGetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropTryGetMessage::CopyFrom(const PropTryGetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PropTryGetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropTryGetMessage::IsInitialized() const {
  return true;
}

void PropTryGetMessage::InternalSwap(PropTryGetMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropTryGetMessage, prop_type_)
      + sizeof(PropTryGetMessage::prop_type_)
      - PROTOBUF_FIELD_OFFSET(PropTryGetMessage, player_id_)>(
          reinterpret_cast<char*>(&player_id_),
          reinterpret_cast<char*>(&other->player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PropTryGetMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PropGetMessage::InitAsDefaultInstance() {
}
class PropGetMessage::_Internal {
 public:
};

PropGetMessage::PropGetMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.PropGetMessage)
}
PropGetMessage::PropGetMessage(const PropGetMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&is_get_, &from.is_get_,
    static_cast<size_t>(reinterpret_cast<char*>(&prop_id_) -
    reinterpret_cast<char*>(&is_get_)) + sizeof(prop_id_));
  // @@protoc_insertion_point(copy_constructor:message.PropGetMessage)
}

void PropGetMessage::SharedCtor() {
  ::memset(&is_get_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_id_) -
      reinterpret_cast<char*>(&is_get_)) + sizeof(prop_id_));
}

PropGetMessage::~PropGetMessage() {
  // @@protoc_insertion_point(destructor:message.PropGetMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PropGetMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PropGetMessage::ArenaDtor(void* object) {
  PropGetMessage* _this = reinterpret_cast< PropGetMessage* >(object);
  (void)_this;
}
void PropGetMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PropGetMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PropGetMessage& PropGetMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PropGetMessage_message_2eproto.base);
  return *internal_default_instance();
}


void PropGetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PropGetMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_get_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_id_) -
      reinterpret_cast<char*>(&is_get_)) + sizeof(prop_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropGetMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_get = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_get_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 prop_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          prop_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PropGetMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PropGetMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_get = 1;
  if (this->is_get() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_get(), target);
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_player_id(), target);
  }

  // int32 prop_id = 3;
  if (this->prop_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_prop_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PropGetMessage)
  return target;
}

size_t PropGetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PropGetMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_get = 1;
  if (this->is_get() != 0) {
    total_size += 1 + 1;
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // int32 prop_id = 3;
  if (this->prop_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prop_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropGetMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.PropGetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PropGetMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PropGetMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.PropGetMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.PropGetMessage)
    MergeFrom(*source);
  }
}

void PropGetMessage::MergeFrom(const PropGetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.PropGetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_get() != 0) {
    _internal_set_is_get(from._internal_is_get());
  }
  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.prop_id() != 0) {
    _internal_set_prop_id(from._internal_prop_id());
  }
}

void PropGetMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.PropGetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropGetMessage::CopyFrom(const PropGetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PropGetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropGetMessage::IsInitialized() const {
  return true;
}

void PropGetMessage::InternalSwap(PropGetMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropGetMessage, prop_id_)
      + sizeof(PropGetMessage::prop_id_)
      - PROTOBUF_FIELD_OFFSET(PropGetMessage, is_get_)>(
          reinterpret_cast<char*>(&is_get_),
          reinterpret_cast<char*>(&other->is_get_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PropGetMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReaperAttackResultMessage::InitAsDefaultInstance() {
}
class ReaperAttackResultMessage::_Internal {
 public:
};

ReaperAttackResultMessage::ReaperAttackResultMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.ReaperAttackResultMessage)
}
ReaperAttackResultMessage::ReaperAttackResultMessage(const ReaperAttackResultMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&soul_player_id_, &from.soul_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_hit_) -
    reinterpret_cast<char*>(&soul_player_id_)) + sizeof(is_hit_));
  // @@protoc_insertion_point(copy_constructor:message.ReaperAttackResultMessage)
}

void ReaperAttackResultMessage::SharedCtor() {
  ::memset(&soul_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_hit_) -
      reinterpret_cast<char*>(&soul_player_id_)) + sizeof(is_hit_));
}

ReaperAttackResultMessage::~ReaperAttackResultMessage() {
  // @@protoc_insertion_point(destructor:message.ReaperAttackResultMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReaperAttackResultMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReaperAttackResultMessage::ArenaDtor(void* object) {
  ReaperAttackResultMessage* _this = reinterpret_cast< ReaperAttackResultMessage* >(object);
  (void)_this;
}
void ReaperAttackResultMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReaperAttackResultMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReaperAttackResultMessage& ReaperAttackResultMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReaperAttackResultMessage_message_2eproto.base);
  return *internal_default_instance();
}


void ReaperAttackResultMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.ReaperAttackResultMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&soul_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_hit_) -
      reinterpret_cast<char*>(&soul_player_id_)) + sizeof(is_hit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReaperAttackResultMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 soul_player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          soul_player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_hit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_hit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReaperAttackResultMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReaperAttackResultMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 soul_player_id = 1;
  if (this->soul_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_soul_player_id(), target);
  }

  // bool is_hit = 2;
  if (this->is_hit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_hit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReaperAttackResultMessage)
  return target;
}

size_t ReaperAttackResultMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.ReaperAttackResultMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 soul_player_id = 1;
  if (this->soul_player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_soul_player_id());
  }

  // bool is_hit = 2;
  if (this->is_hit() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReaperAttackResultMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.ReaperAttackResultMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReaperAttackResultMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReaperAttackResultMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.ReaperAttackResultMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.ReaperAttackResultMessage)
    MergeFrom(*source);
  }
}

void ReaperAttackResultMessage::MergeFrom(const ReaperAttackResultMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.ReaperAttackResultMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.soul_player_id() != 0) {
    _internal_set_soul_player_id(from._internal_soul_player_id());
  }
  if (from.is_hit() != 0) {
    _internal_set_is_hit(from._internal_is_hit());
  }
}

void ReaperAttackResultMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.ReaperAttackResultMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReaperAttackResultMessage::CopyFrom(const ReaperAttackResultMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.ReaperAttackResultMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReaperAttackResultMessage::IsInitialized() const {
  return true;
}

void ReaperAttackResultMessage::InternalSwap(ReaperAttackResultMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReaperAttackResultMessage, is_hit_)
      + sizeof(ReaperAttackResultMessage::is_hit_)
      - PROTOBUF_FIELD_OFFSET(ReaperAttackResultMessage, soul_player_id_)>(
          reinterpret_cast<char*>(&soul_player_id_),
          reinterpret_cast<char*>(&other->soul_player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReaperAttackResultMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntegerMessage::InitAsDefaultInstance() {
}
class IntegerMessage::_Internal {
 public:
};

IntegerMessage::IntegerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.IntegerMessage)
}
IntegerMessage::IntegerMessage(const IntegerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&message_type_, &from.message_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&message_type_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:message.IntegerMessage)
}

void IntegerMessage::SharedCtor() {
  ::memset(&message_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&message_type_)) + sizeof(value_));
}

IntegerMessage::~IntegerMessage() {
  // @@protoc_insertion_point(destructor:message.IntegerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntegerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IntegerMessage::ArenaDtor(void* object) {
  IntegerMessage* _this = reinterpret_cast< IntegerMessage* >(object);
  (void)_this;
}
void IntegerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntegerMessage& IntegerMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntegerMessage_message_2eproto.base);
  return *internal_default_instance();
}


void IntegerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.IntegerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&message_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&message_type_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.IntegerMessageType message_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::message::IntegerMessageType>(val));
        } else goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntegerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.IntegerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.IntegerMessageType message_type = 1;
  if (this->message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_message_type(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.IntegerMessage)
  return target;
}

size_t IntegerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.IntegerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .message.IntegerMessageType message_type = 1;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.IntegerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntegerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.IntegerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.IntegerMessage)
    MergeFrom(*source);
  }
}

void IntegerMessage::MergeFrom(const IntegerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.IntegerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_type() != 0) {
    _internal_set_message_type(from._internal_message_type());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void IntegerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.IntegerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerMessage::CopyFrom(const IntegerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.IntegerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerMessage::IsInitialized() const {
  return true;
}

void IntegerMessage::InternalSwap(IntegerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IntegerMessage, value_)
      + sizeof(IntegerMessage::value_)
      - PROTOBUF_FIELD_OFFSET(IntegerMessage, message_type_)>(
          reinterpret_cast<char*>(&message_type_),
          reinterpret_cast<char*>(&other->message_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::message::HelloMessage* Arena::CreateMaybeMessage< ::message::HelloMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::HelloMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::Character* Arena::CreateMaybeMessage< ::message::Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::Character >(arena);
}
template<> PROTOBUF_NOINLINE ::message::MessageWrapper* Arena::CreateMaybeMessage< ::message::MessageWrapper >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::MessageWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::message::RoomMessage* Arena::CreateMaybeMessage< ::message::RoomMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::RoomMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::StringMessage* Arena::CreateMaybeMessage< ::message::StringMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::StringMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::LobbyMessage* Arena::CreateMaybeMessage< ::message::LobbyMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::LobbyMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::StartReceiveMsgMessage* Arena::CreateMaybeMessage< ::message::StartReceiveMsgMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::StartReceiveMsgMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::PlayerBasicMessage* Arena::CreateMaybeMessage< ::message::PlayerBasicMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::PlayerBasicMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::ReaperAttackMessage* Arena::CreateMaybeMessage< ::message::ReaperAttackMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::ReaperAttackMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::PropTryGetMessage* Arena::CreateMaybeMessage< ::message::PropTryGetMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::PropTryGetMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::PropGetMessage* Arena::CreateMaybeMessage< ::message::PropGetMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::PropGetMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::ReaperAttackResultMessage* Arena::CreateMaybeMessage< ::message::ReaperAttackResultMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::ReaperAttackResultMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::IntegerMessage* Arena::CreateMaybeMessage< ::message::IntegerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::message::IntegerMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
